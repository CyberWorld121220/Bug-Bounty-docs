vulnerability check:

XXE
file upload
json error
Broken Links { in webpages , owners include social links to follow them on twitter , linkedin,telegram etc , sometimes they change their socialmedia username but not update their new link on webpages , so link takeover is possible by creating new account with the same username }
WebSocket Vulnerabilities
Chat box robot xss, file upload ssrf etc
Text Injection [suppose if a url is showing cannot GET / instead of 404 , means and if put and word in url which is reflecting then we can exploit it , check simplevulner.. file ]
Email Spoofing
JWT {use burp decoder to decode each part of the JWT , 1) you can make alg:"none" 2) modify the payload values }
sql injection error
any type of error
graphql
SAML
CORS
xss 1) Reflected 2) DOM 3) Stored
xee
html injection
Forbidden page bypass by adding ?.css in last
iframe
SSTI   {{5*5}} 
Subdomain Takeover
Web cache POSISONING
WEB CACHE DECEPTION
HTTP request Summugling (Content Length and transfer encoding)  NOTE1: request sumuggling mein jo  request hoti hai woh hamesha hi POST request hoti hai,kisi aur type ki request se humm summugling nhi kr sakte
(HOST Header attack)open redirection vulnerabilty : agar website kisi jagah http://www.example.com par jakar data le rahi hai and agar hum request mein change krne ke baad http://www.example.com ko http://atacker.com par redirect kr par toh yein ek vulnerabilty hai
SSRF
IDOR (insecure direct object refrence)
HTTP request pollution 
       1) (HTTP request smuglling)
       2) Heaaders Pollution : for example : 
                                          GET / HTTP/1.1 
                                          ---
                                          ---
                                          --- 
                                          Response: 
                                          ---
                                          ---
                                          Request-Path: /
                                          Similaraly:
                                          GET /test HTTP/1.1 
                                          ---
                                          ---
                                          --- 
                                          Response: 
                                          ---
                                          ---
                                          Request-Path: /test
                                          Attack:  you can create a new header in the response by adding \r\n in GET header in urlencoded
                                          GET /%0d%0aSet-Cookie:anchorms=thiscookiewillgetinjectandbecomethepermanentlogincookieofuserwhichisalsoexplosedtoattacker HTTP/1.1 
                                          ---
                                          ---
                                          --- 
                                          Response: 
                                          ---
                                          ---
                                          Request-Path: /
                                          Set-Cookie:anchorms=thiscookiewillgetinjectandbecomethepermanentlogincookieofuserwhichisalsoexplosedtoattacker
                                          Now user browser will store this cookie,and use this for login purpose so whenever visit website he will use this cookie, basically with this attack we can update the cookie of user to that value which we also know... , for more info check the video present in this folder....name as Lesson 36  HTTP header injection
open redirect :

              Suppose kisi website ki url mein do url hai example: &redirect=https://www.domain.com toh tum sabse pehle yein check kro ki www.domain.com ko www.evil.com krne par woh khulta hai ya nahi,agar khul jaye toh open redirect vulnerability exist krti hai
directory traversal: check image in the same folder name as : Directory-traversal
Host Header attack: xss : add one more line in request below the Host Header: X-Forwarded-Host: "</script>ssss<script>alert("Reflected XSS")</script> 
                  : changing host to evil.com see in exploitvuln.txt
User-Agent attack: jo website hamara OS detect krti hai , example automatically jaan jati hai ki yein windows hai toh windows ke software downloading ke liye top pe dikahayeigi,they do this by the following:
 <?php echo $_SERVER['HTTP_USER_AGENT']; ?> we have to bypass this function , we can put : <script>alert(123)</script>
